version: "3.8"

services:
  # Traefik Reverse Proxy
  traefik:
    image: traefik:v3.0
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml
      - ./traefik/acme.json:/acme.json
    environment:
      - DOMAIN=ayinde.name.ng
    labels:
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

  # Frontend service
  frontend:
    build: ./frontend
    # ports:
    #   - "8080:8080"
    depends_on:
      - auth-api
      - todos-api
      - users-api
    env_file: ./frontend/.env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`ayinde.name.ng`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.services.frontend.loadbalancer.server.port=8080"

  # Auth API service (Go)
  auth-api:
    build: ./auth-api
    # ports:
    #   - "8081:8081"
    depends_on:
      - users-api
    env_file: ./auth-api/.env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth.rule=Host(`ayinde.name.ng`) && PathPrefix(`/api/auth`)"
      - "traefik.http.routers.auth.entrypoints=websecure"
      - "traefik.http.services.auth.loadbalancer.server.port=8081"

  # Todos API service (Node.js)
  todos-api:
    build: ./todos-api
    # ports:
    #   - "8082:8082"
    depends_on:
      - redis-queue
    env_file: ./todos-api/.env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.todos.rule=Host(`ayinde.name.ng`) && PathPrefix(`/api/todos`)"
      - "traefik.http.routers.todos.entrypoints=websecure"
      - "traefik.http.services.todos.loadbalancer.server.port=8082"

  # Users API service (Java/Spring Boot)
  users-api:
    build: ./users-api
    env_file: ./users-api/.env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.users.rule=Host(`ayinde.name.ng`) && PathPrefix(`/api/users`)"
      - "traefik.http.routers.users.entrypoints=websecure"
      - "traefik.http.services.users.loadbalancer.server.port=8083"

  # Log Message Processor service (Python)
  log-processor:
    build: ./log-message-processor
    depends_on:
      - redis-queue
    env_file: ./log-message-processor/.env

  # Redis for caching and message queue
  redis-queue:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes

volumes:
  redis-data:
